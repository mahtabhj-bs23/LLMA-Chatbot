# name: Build
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   sonarqube:
#     name: SonarQube
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: SonarQube Scan
#         uses: SonarSource/sonarqube-scan-action@v5
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures better analysis relevance

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarQube Quality Gate
        id: quality-gate
        run: |
          sleep 10  # Wait for SonarCloud to process results
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ vars.SONAR_PROJECT_KEY }}" \
            | jq -r '.projectStatus.status')

          if [[ "$STATUS" == "OK" ]]; then
            echo "Quality Gate Passed!"
            echo "quality_gate_passed=true" >> $GITHUB_ENV
          else
            echo "Quality Gate Failed!"
            echo "quality_gate_passed=false" >> $GITHUB_ENV
            exit 1  # Fails the pipeline if Quality Gate does not pass

  successful_step:
    name: Successful Step
    needs: sonarqube
    runs-on: ubuntu-latest
    if: success() && env.quality_gate_passed == 'true'
    steps:
      - name: Print Success Message
        run: echo "Hello, you are good to go!"
